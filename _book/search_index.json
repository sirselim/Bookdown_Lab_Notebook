[
["index.html", "WILS 2016 Lab Notebook Preface", " WILS 2016 Lab Notebook Miles Benton Preface Hi. Bye. "],
["test-section.html", "Test section", " Test section Here is some writing. -->"],
["part-i-general-overview.html", "Part I: General Overview", " Part I: General Overview "],
["chap1.html", "1 Chapter 1", " 1 Chapter 1 This should be the first chapter… "],
["r-markdown.html", "1.1 R Markdown", " 1.1 R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this: summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 "],
["including-plots.html", "1.2 Including Plots", " 1.2 Including Plots You can also embed plots, for example: Note that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot. -->"],
["chap2.html", "2 Chapter 2", " 2 Chapter 2 Here is another chapter… "],
["creating-figures.html", "2.1 Creating figures", " 2.1 Creating figures plot(cars) Figure 2.1: testing figure captions. Can cross-ref your figures, see Figure 2.1.1 Block quotes are a thing: “I thoroughly disapprove of duels. If a man should challenge me, I would take him kindly and forgivingly by the hand and lead him to a quiet place and kill him.” — Mark Twain plot(iris$Sepal.Length, iris$Petal.Length, col = iris$Species, pch = 16, cex = 2) legend(4.5, 7, legend = c(&quot;setosa&quot;,&quot;versicolor&quot;,&quot;virginica&quot;), col = c(1:3), lty = &quot;solid&quot;) Figure 2.2: Scatterplot with legend using iris data. You can also use footnotes in your book.↩ "],
["simulate-data-and-plot-some-figures.html", "2.2 Simulate data and plot some figures", " 2.2 Simulate data and plot some figures ## Simulate some data ## 3 Factor Variables FacVar1 = as.factor(rep(c(&quot;level1&quot;, &quot;level2&quot;), 25)) FacVar2 = as.factor(rep(c(&quot;levelA&quot;, &quot;levelB&quot;, &quot;levelC&quot;), 17)[-51]) FacVar3 = as.factor(rep(c(&quot;levelI&quot;, &quot;levelII&quot;, &quot;levelIII&quot;, &quot;levelIV&quot;), 13)[-c(51:52)]) ## 4 Numeric Vars set.seed(123) NumVar1 = round(rnorm(n = 50, mean = 1000, sd = 50), digits = 2) ## Normal distribution set.seed(123) NumVar2 = round(runif(n = 50, min = 500, max = 1500), digits = 2) ## Uniform distribution set.seed(123) NumVar3 = round(rexp(n = 50, rate = 0.001)) ## Exponential distribution NumVar4 = 2001:2050 simData = data.frame(FacVar1, FacVar2, FacVar3, NumVar1, NumVar2, NumVar3, NumVar4) 2.2.1 One Variable: Numeric Variable plot(simData$NumVar1, type = &quot;o&quot;) ## Index plot Figure 2.3: Plotting one numeric variable. 2.2.2 Two Variables: Two Numeric Variables plot(simData$NumVar1, type = &quot;o&quot;, ylim = c(0, max(simData$NumVar1, simData$NumVar2))) ## index plot with one variable lines(simData$NumVar2, type = &quot;o&quot;, lty = 2, col = &quot;red&quot;) ## add another variable Figure 2.4: Plotting two numeric variables. "],
["more-plotting.html", "2.3 More plotting", " 2.3 More plotting The below examples come from here: http://shinyapps.org/apps/RGraphCompendium/index.php 2.3.1 Correlations # Presidential data up to and including 2008; data from Stulp et al. 2013 # rm(list=ls()) # height of president divided by height of most successful opponent: height.ratio &lt;- c(0.924324324, 1.081871345, 1, 0.971098266, 1.029761905, 0.935135135, 0.994252874, 0.908163265, 1.045714286, 1.18404908, 1.115606936, 0.971910112, 0.97752809, 0.978609626, 1, 0.933333333, 1.071428571, 0.944444444, 0.944444444, 1.017142857, 1.011111111, 1.011235955, 1.011235955, 1.089285714, 0.988888889, 1.011111111, 1.032967033, 1.044444444, 1, 1.086705202, 1.011560694, 1.005617978, 1.005617978, 1.005494505, 1.072222222, 1.011111111, 0.983783784, 0.967213115, 1.04519774, 1.027777778, 1.086705202, 1, 1.005347594, 0.983783784, 0.943005181, 1.057142857) # proportion popular vote for president vs most successful opponent # NB can be lower than .5 because popolar vote does not decide election pop.vote &lt;- c(0.427780852, 0.56148981, 0.597141922, 0.581254292, 0.530344067, 0.507425996, 0.526679292, 0.536690951, 0.577825976, 0.573225387, 0.550410082, 0.559380032, 0.484823958, 0.500466176, 0.502934212, 0.49569636, 0.516904414, 0.522050547, 0.531494442, 0.60014892, 0.545079801, 0.604274986, 0.51635906, 0.63850958, 0.652184407, 0.587920412, 0.5914898, 0.624614752, 0.550040193, 0.537771958, 0.523673642, 0.554517134, 0.577511576, 0.500856251, 0.613444534, 0.504063153, 0.617883695, 0.51049949, 0.553073235, 0.59166415, 0.538982024, 0.53455133, 0.547304058, 0.497350649, 0.512424242, 0.536914796) # cor.test(height.ratio,pop.vote) library(plotrix) # package plotrix is needed for function &quot;ablineclip&quot;&quot; # if the following line and the line containing &quot;dev.off()&quot; are executed, the plot will be saved as a png file in the current working directory # png(&quot;Presidental.png&quot;, width = 18, height = 18, units = &quot;cm&quot;, res = 800, pointsize = 10) op &lt;- par(cex.main = 1.5, mar = c(5, 6, 4, 5) + 0.1, mgp = c(3.5, 1, 0), cex.lab = 1.5 , font.lab = 2, cex.axis = 1.3, bty = &quot;n&quot;, las = 1) plot(height.ratio, pop.vote, col = &quot;black&quot;, pch = 21, bg = &quot;grey&quot;, cex = 2, xlim = c(.90,1.20), ylim = c(.40,.70), ylab = &quot;&quot;, xlab = &quot;&quot;, axes = FALSE) axis(1) axis(2) reg1 &lt;- lm(pop.vote ~ height.ratio) ablineclip(reg1, lwd = 2,x1 = .9, x2 = 1.2) par(las = 0) mtext(&quot;Presidential Height Ratio&quot;, side = 1, line = 2.5, cex = 1.5) mtext(&quot;Relative Support for President&quot;, side = 2, line = 3.7, cex = 1.5) text(1.15, .65, &quot;r = .39&quot;, cex = 1.5) # dev.off() # For comparison, consider the default plot: par(op) # reset to default &quot;par&quot; settings plot(height.ratio, pop.vote) #yuk! 2.3.2 Including a Density Estimator # rm(list = ls()) # Data: Proportion of choices from the good decks as reported in 39 studies good.choices &lt;- c(.43, .47, .47, .48, .50, .52, .53, .53, .54, .54, .54, .54, .55, .55, .55, .56, .56, .57, .57, .57, .57, .58, .58, .58, .59, .59, .60, .62, .63, .63, .64, .64, .66, .66, .67, .67, .68, .70, .70) yhigh &lt;- 8 par(cex.main = 1.5, mar = c(5, 6, 4, 5) + 0.1, mgp = c(3.5, 1, 0), cex.lab = 1.5 , font.lab = 2, cex.axis = 1.3, bty = &quot;n&quot;, las = 1) h &lt;- hist(good.choices, freq = FALSE, main = &quot;&quot;, xlab = &quot;&quot;, ylab = &quot; &quot;, ylim = c(0, yhigh), xlim = c(.30, .80), axes = FALSE, col = &quot;grey&quot;) axis(1, seq(.30, .80, by = .1)) axis(2, labels = FALSE, lwd.ticks = 0) rug(jitter(good.choices)) mtext(&quot;Prop. Choices from Good Decks&quot;, side = 1, line = 2.5, cex = 1.5, font = 2) mtext(&quot;Density of Studies&quot;, side = 2, line = 1, cex = 1.5, font = 2, las = 0) lines(density(good.choices), lwd = 2) 2.3.3 Network graph library(&quot;psych&quot;) library(&quot;qgraph&quot;) # Load BFI data: data(bfi) bfi &lt;- bfi[, 1:25] # Groups and names object (not needed really, but make the plots easier to # interpret): Names &lt;- scan(&quot;http://sachaepskamp.com/files/BFIitems.txt&quot;, what = &quot;character&quot;, sep = &quot;\\n&quot;) # Create groups object: Groups &lt;- rep(c(&quot;A&quot;, &quot;C&quot;, &quot;E&quot;, &quot;N&quot;, &quot;O&quot;), each = 5) # Compute correlations: cor_bfi &lt;- cor_auto(bfi) # Plot correlation network: graph_cor &lt;- qgraph(cor_bfi, layout = &quot;spring&quot;, nodeNames = Names, groups = Groups, legend.cex = 0.6, DoNotPlot = TRUE) # Plot partial correlation network: graph_pcor &lt;- qgraph(cor_bfi, graph = &quot;concentration&quot;, layout = &quot;spring&quot;, nodeNames = Names, groups = Groups, legend.cex = 0.6, DoNotPlot = TRUE) # Plot glasso network: graph_glas &lt;- qgraph(cor_bfi, graph = &quot;glasso&quot;, sampleSize = nrow(bfi), layout = &quot;spring&quot;, nodeNames = Names, legend.cex = 0.6, groups = Groups, legend.cex = 0.7, GLratio = 2) -->"],
["chap3.html", "3 Chapter 3", " 3 Chapter 3 Here is another chapter… "],
["cross-referencing-chapters.html", "3.1 Cross Referencing Chapters", " 3.1 Cross Referencing Chapters We can also cross reference chapters, see Chapter 1 and Chapter 2. I should also be able to link to a section like this, see this section, and also this way Chapter 2. "],
["cross-reference-sections.html", "3.2 Cross Reference Sections", " 3.2 Cross Reference Sections We should also be able to cross reference a specfic section of text as well, Section 4.6.1 and Display code. "],
["citing-literature.html", "3.3 Citing literature", " 3.3 Citing literature Should also be able to use citations in text [1]. Does it keep poping in…? What about another citation, see [2,3]. --> References "],
["part-ii-experimental-structure.html", "Part II: Experimental Structure", " Part II: Experimental Structure "],
["writeup.html", "4 An example experiment write up", " 4 An example experiment write up This chapter will detail the structure that an experimental write up should take for this course. What follows is a template for the basic structure laid out in the WILS Lab Book pdf manual. "],
["title.html", "4.1 Title", " 4.1 Title Using R Notebooks for electronic lab book documentation in Bioinformatics (and generally any other field you want!) "],
["aims.html", "4.2 Aims", " 4.2 Aims Explore the use of the R Notebook environment for creating a reproducible and dynamic reporting system for use in the field of Bioinformatics. "],
["introduction.html", "4.3 Introduction", " 4.3 Introduction It has been well established that the tools contained within the RStudio software have made creating and diseminating electronic reports much easier. By using RMarkdown users are able to generate notes/written content in the same ernvironment as working with their data and producing statistics and results. "],
["materials.html", "4.4 Materials", " 4.4 Materials For this demonstration we need to download and install several pieces of software. First would be R, which can be downloaded here: https://www.r-project.org/ Next we’ll want to grab RStudio, here is the link: https://www.rstudio.com/products/rstudio/download/preview/ If you want to read more about RMarkdown: http://rmarkdown.rstudio.com/ More information on R Notebooks: http://rmarkdown.rstudio.com/r_notebooks.html "],
["methods.html", "4.5 Methods", " 4.5 Methods We will be exploring a range of different methods and functions from both R and RStudio, and see how they are implemented in R Notebooks and how that can be leveraged to help us create an electronic record, or lab book. "],
["results.html", "4.6 Results", " 4.6 Results Here are some of the many features that are available when using R Notebooks. 4.6.1 Display code We are able to write and evaluate code using chunks, a concept implemented in RMarkdown - allowing us to both write text and code within the same document. To genetate a new chunk press ctrl+alt+i, within the chunk you can write and evaluate R code: 1+1 ## [1] 2 4.6.2 Evaluate statistics/models and display in text lm(cars) ## ## Call: ## lm(formula = cars) ## ## Coefficients: ## (Intercept) dist ## 8.2839 0.1656 summary(lm(cars)) ## ## Call: ## lm(formula = cars) ## ## Residuals: ## Min 1Q Median 3Q Max ## -7.5293 -2.1550 0.3615 2.4377 6.4179 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 8.28391 0.87438 9.474 1.44e-12 *** ## dist 0.16557 0.01749 9.464 1.49e-12 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.156 on 48 degrees of freedom ## Multiple R-squared: 0.6511, Adjusted R-squared: 0.6438 ## F-statistic: 89.57 on 1 and 48 DF, p-value: 1.49e-12 4.6.3 Can even include plots Try executing this chunk by clicking the Run button within the chunk or by placing your cursor inside it and pressing Ctrl+Shift+Enter. plot(cars, pch = 16, col = &quot;cadetblue&quot;) Figure 4.1: Simple plotting using mtcars data. A really nifty feature is that plotted figures get asigned a figure number which is able to be referenced in text (see Figure 4.1). We can create the same plot as before, but this time fit the regression model that we previously generated. We’ll plot the best fit line using the abline function. plot(cars, pch = 16, col = &#39;cadetblue&#39;) abline(lm(cars$dist ~ cars$speed)) Figure 4.2: Plot with regression model fitted. And again we can easily cross-ref the above plot, Figure 4.2. 4.6.4 Tables are also easy We can use the kable function from knitr (note that tables can also be captioned): require(knitr) ## Loading required package: knitr n &lt;- 100 x &lt;- rnorm(n) y &lt;- 2*x + rnorm(n) out &lt;- lm(y ~ x) kable(summary(out)$coef, digits=2, caption = &#39;An example table produced by knitr kable().&#39;) Table 4.1: An example table produced by knitr kable(). Estimate Std. Error t value Pr(&gt;|t|) (Intercept) -0.01 0.09 -0.11 0.91 x 2.01 0.09 22.78 0.00 There is a new package called printr which is a companion app to knitr, aiming to make tables look nicer. The package is currently not on CRAN, so you will need to install it as below: # install printr install.packages( &#39;printr&#39;, type = &#39;source&#39;, repos = c(&#39;http://yihui.name/xran&#39;, &#39;http://cran.rstudio.com&#39;) ) # load the package library(&#39;printr&#39;) The printr package aims to make the standard output from R a little nicer to look at (and easier to read), have a look at the following: library(&#39;printr&#39;) head(mtcars) mpg cyl disp hp drat wt qsec vs am gear carb Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 4.6.5 Output to many popular formats RStudio uses the power of the knitr package and pandoc to allow the exporting of your document to several flexible and popular formats. 4.6.5.1 HTML By selecting knit to HTML an HTML file containing the code and output will be saved alongside it (click the Preview button or press Ctrl+Shift+K to preview the HTML file). 4.6.5.2 Word (.docx) By selecting knit to Word your notebook will be exported to .docx format, which will be able to be read by Microsoft Word and other office packages (i.e. Libre Office). 4.6.5.3 pdf By selecting knit to Word your notebook will be exported to .pdf, the universal format. "],
["discussion.html", "4.7 Discussion", " 4.7 Discussion For any heavily based computational or ’informatics program we should be moving towards embracing technology not only in the tools we use for research, but also those for methods of recording and diseminating our work. As researchers in this field are almost exclusively working on their computers it makes sense to have an electronic record rather thantraditional hand written lab books. This set up is able to run on any OS platform (Linux, MacOS, Windows, etc). "],
["conclusion.html", "4.8 Conclusion", " 4.8 Conclusion The framework provided by R, RStudio and RMarkdown come together in the form of R Notebooks and make for an excellent form of electronic recording for daily activities/experiments, providing an ideal solution for Bioinformatics lab books. -->"],
["part-iiimore-stuff.html", "Part III:More Stuff", " Part III:More Stuff "],
["another-chapter.html", "5 Another Chapter", " 5 Another Chapter This is just to demonstrate how the document comes together. "],
["another-section.html", "5.1 Another section", " 5.1 Another section …and more writing… "],
["and-another-section.html", "5.2 and another section", " 5.2 and another section Here is some more writing… -->"],
["references.html", "References", " References "]
]
